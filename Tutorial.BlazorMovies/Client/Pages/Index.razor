@page "/"

<p>Hello, @StringUtilities.CustomToUpper(Name)</p>

<p>Lets add 2 + 2 = @(2 + 2)</p>

<button @onclick="@(()=> Console.WriteLine("Button clicked"))">Click me</button>
<button @onclick="@WriteInLog">Click me</button>

<div>
    <h3>Movie</h3>
    @if (movies == null)
    {
        <text>Loading ..... </text>
    }
    else
    {
        @foreach (var movie in movies)
        {
            <p>Title: @((MarkupString)movie.Title)</p>
            <p>Release Date: <b>@movie.ReleaseDate.ToString("dd.MM.yyyy")</b></p>
        }
    
        @for (int i = 0; i < movies.Count; i++)
        {
            <div style="background-color: @(i % 2 == 0 ? "blue" : "red")">
                <p>@(i+1)) Title: <b>@movies[i].Title</b></p>
                <p>Release Date: <b>@movies[i].ReleaseDate.ToString("dd.MM.yyyy")</b></p>
            </div>
        }
    }
</div>

@code{

        private const string Name = "Mr. Smith";

    List<Movie> movies;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(3000);
        movies = new List<Movie>
        {
            new Movie {Title = "<b>Spiderman: Far from Home</b>", ReleaseDate = new DateTime(2019, 7, 2)},
            new Movie {Title = "<i>Moana</i>", ReleaseDate = new DateTime(2016, 11, 23)},
            new Movie {Title = "Inception", ReleaseDate = new DateTime(2010, 7, 16)}
        };
        base.OnInitialized();
    }

    readonly Movie spidermanMovie = new Movie
    {
        Title = "Spiderman: Far from Home",
        ReleaseDate = new DateTime(2019, 7, 2)
    };

    private void WriteInLog()
    {
        Console.WriteLine("Method from Razor Code was called");
    }

}